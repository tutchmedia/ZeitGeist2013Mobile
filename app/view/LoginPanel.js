/*
 * File: app/view/LoginPanel.js
 *
 * This file was generated by Sencha Architect version 2.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.1.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Google.view.LoginPanel', {
    extend: 'Ext.form.Panel',
    alias: 'widget.LoginPanel',

    requires: [
        'Ext.form.FieldSet',
        'Ext.field.Text',
        'Ext.field.Password',
        'Ext.MessageBox'
    ],

    config: {
        id: 'LoginPanel',
        itemId: 'LoginPanel',
        items: [
            {
                xtype: 'container',
                height: 100,
                style: 'margin-top:20px;',
                items: [
                    {
                        xtype: 'image',
                        height: 95,
                        src: 'app/images/logo.png'
                    }
                ]
            },
            {
                xtype: 'container',
                height: '50px',
                html: 'Welcome to Google Zeitgeist 2013',
                style: 'font-size:12px;',
                width: 'px'
            },
            {
                xtype: 'fieldset',
                id: 'LoginForm',
                title: '',
                items: [
                    {
                        xtype: 'textfield',
                        id: 'userfield',
                        itemId: 'userfield',
                        name: 'username',
                        autoComplete: false,
                        placeHolder: 'Username'
                    },
                    {
                        xtype: 'passwordfield',
                        id: 'passfield',
                        itemId: 'passfield',
                        name: 'password',
                        placeHolder: 'Password'
                    }
                ]
            },
            {
                xtype: 'button',
                itemId: 'mybutton',
                ui: 'confirm',
                text: 'Login'
            }
        ],
        listeners: [
            {
                fn: 'onMybuttonTap',
                event: 'tap',
                delegate: '#mybutton'
            }
        ]
    },

    onMybuttonTap: function(button, e, options) {
        Ext.Ajax.request({
            url: 'http://api.eventsy.co.uk/checkLogin.php',
            method: 'POST',
            defaultHeaders : 'application/json', 

            params: {
                username: Ext.getCmp('userfield').getValue(),
                password: Ext.getCmp('passfield').getValue()
            },


            success : function(response, opt) {

                var text = response.responseText;

                var text1 = Ext.JSON.decode(text);

                var check = text1.success;
                var check_fail = text1.failure;


                var userid = text1.user_id;
                var allow_messages = text1.allow_messaging;
                var user_name = text1.username;


                if(allow_messages == 1)
                {
                    var popup = 1;
                } else {
                    var popup = 0;
                }


                // If success comes back then proceed
                if(check === true)
                {


                    var user = Ext.create('Google.model.CurrentUser', {
                        id: 1,
                        user_id: userid,
                        username: user_name,
                        showPopup: popup,
                        allowMessages: allow_messages
                    });


                    user.save({
                        success: function() {
                            console.log("The data should now be saved.");
                        }
                    }, this);

                    console.log("Logged User In.");





                    // Pre download from the web to local stores








                    // After all the initializing proceed to the dashboard

                    Ext.Viewport.setActiveItem('NavView');    




                }



                // If failure comes back then stop and show the message
                if(check_fail === true)
                {
                    Ext.Msg.alert('Login Failed', "Sorry, we couldn't log you in. Please check your details and try again.");
                }







            },

            failure : function(response, opt) {
                // Do failure message
                Ext.Msg.alert('Login Failed', "Sorry, we couldn't log you in. Please check your details and try again.");
            }
        });
    }

});
/*
 * File: app/view/AskQuestion.js
 *
 * This file was generated by Sencha Architect version 2.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.1.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Google.view.AskQuestion', {
    extend: 'Ext.form.Panel',
    alias: 'widget.AskQuestion',

    requires: [
        'Ext.field.TextArea'
    ],

    config: {
        refs: '#loginform',
        id: 'loginform',
        items: [
            {
                xtype: 'container',
                height: '100px',
                html: 'Ask a Question allows you to submit a question to the current speaker.',
                padding: '5px'
            },
            {
                xtype: 'textareafield',
                label: 'Question',
                name: 'question'
            },
            {
                xtype: 'button',
                itemId: 'submitLoginForm',
                margin: '',
                style: 'margin-top:10px;',
                top: '',
                ui: 'confirm',
                pressedCls: 'question-button',
                text: 'Ask'
            }
        ],
        listeners: [
            {
                fn: 'submitLoginForm',
                event: 'tap',
                delegate: '#submitLoginForm'
            },
            {
                fn: 'onLoginformInitialize',
                event: 'initialize'
            }
        ]
    },

    submitLoginForm: function(button, e, options) {
        var values = this.getValues();
        //console.log(values);

        var eventID = this.getInitialConfig('EventID');

        console.log(eventID);

        this.submit({
            url: 'http://api.eventsy.co.uk/question.php?event=1',
            method: 'POST',
            success: function(response) {
                // do whatever you need to with the generated HTML
                Ext.Msg.alert("Success", "Your question has been submitted.");
                this.reset();
                Ext.getCmp('NavView').pop();
            },
            failure: function(response){
                // Do failure message
                Ext.Msg.alert("Failed","Sorry, you cannot send a blank question.");
            }
        });
    },

    onLoginformInitialize: function(component, options) {
        Ext.getCmp('AskQuestionButton').hide(true);
    }

});
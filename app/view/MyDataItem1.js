/*
 * File: app/view/MyDataItem1.js
 *
 * This file was generated by Sencha Architect version 2.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.1.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Google.view.MyDataItem1', {
    extend: 'Ext.dataview.component.DataItem',
    alias: 'widget.MyDataItem1',

    config: {
        padding: 10,
        layout: {
            type: 'hbox'
        },
        items: [
            {
                xtype: 'component',
                itemId: 'cellText',
                tpl: [
                    '<div class="attendeesRow">',
                    '    <div class="attendee-name">{full_name}</div>',
                    '    <small>{j_title}</small><br />',
                    '    <small>{company}</small>   ',
                    '</div>'
                ],
                width: '80%'
            },
            {
                xtype: 'button',
                type: 'MessageButton',
                cls: 'ComposeButton',
                height: '50%',
                itemId: 'ComposeButton',
                ui: 'confirm',
                iconAlign: 'center',
                iconCls: 'compose',
                iconMask: true
            },
            {
                xtype: 'button',
                height: '50%',
                text: 'Google +'
            }
        ],
        listeners: [
            {
                fn: 'onMybutton15Tap',
                event: 'tap',
                delegate: '#ComposeButton'
            },
            {
                fn: 'onDataitemInitialize',
                event: 'initialize'
            }
        ]
    },

    onMybutton15Tap: function(button, e, options) {
        var myDataItem = button.getParent();
        var record = myDataItem.getRecord();


        // Algorithm to not show the button if the user's option is set to off

        var allowMessages = record.data.allow_messaging;

        if(allowMessages == 0)
        {
            console.log("Button Hidden");
            Ext.Msg.alert("Privacy Alert", "Sorry, this guest doesn't allow messaging.");
        } else {

            this.up('navigationview').push({
                title: 'Compose',
                xtype: 'ComposePanel',
                userID: record.data.id,
                full_name: record.data.full_name
            });

        }
    },

    onDataitemInitialize: function(component, options) {

    }

});
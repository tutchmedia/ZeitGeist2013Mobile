/*
 * File: app/view/AgendaPanel.js
 *
 * This file was generated by Sencha Architect version 2.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.1.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Google.view.AgendaPanel', {
    extend: 'Ext.tab.Panel',
    alias: 'widget.AgendaPanel',

    requires: [
        'Ext.plugin.PullRefresh'
    ],

    config: {
        ui: 'light',
        items: [
            {
                xtype: 'list',
                title: 'Day 1',
                itemId: 'mylist',
                itemTpl: [
                    '<div class="padding">',
                    '    <small><b>{time} - {until}</b></small>',
                    '    <br />',
                    '    <div class="agendaTitle">{title}</div>',
                    '    <small>{location}</small>',
                    '</div>'
                ],
                store: 'ScheduleDay1',
                plugins: [
                    {
                        xtype: 'component',
                        refreshFn: function(plugin) {
                            console.log("Feeds Refreshed");
                            Ext.getStore('ScheduleDay1').load();
                            Ext.getStore('ScheduleDay2').load();
                            Ext.getStore('ScheduleDay3').load();
                        },
                        type: 'pullrefresh'
                    }
                ]
            },
            {
                xtype: 'list',
                title: 'Day 2',
                itemTpl: [
                    '<div class="padding">',
                    '    <small><b>{time} - {until}</b></small>',
                    '    <br />',
                    '    <div class="agendaTitle">{title}</div>',
                    '    <small>{location}</small>',
                    '</div>'
                ],
                store: 'ScheduleDay2'
            },
            {
                xtype: 'list',
                title: 'Day 3',
                itemTpl: [
                    '<div class="padding">',
                    '    <small><b>{time} - {until}</b></small>',
                    '    <br />',
                    '    <div class="agendaTitle">{title}</div>',
                    '    <small>{location}</small>',
                    '</div>'
                ],
                store: 'ScheduleDay3'
            }
        ],
        listeners: [
            {
                fn: 'onMylistItemTap',
                event: 'itemtap',
                delegate: '#mylist'
            },
            {
                fn: 'onTabpanelInitialize',
                event: 'initialize'
            },
            {
                fn: 'onTabpanelShow',
                event: 'show'
            }
        ]
    },

    onMylistItemTap: function(dataview, index, target, record, e, options) {
        this.up('NavView').push({
            xtype: 'EventDetailView',
            extend: 'MyTabPanel2',
            data: record.data,
            speakerID: record.data.speaker_id,
            title: 'Details'
        });
    },

    onTabpanelInitialize: function(component, options) {
        // Load in the stores


        //Day 1 (sunday)
        Ext.getStore('ScheduleDay1').load();


        // Day 2 (monday)
        Ext.getStore('ScheduleDay2').load();


        //Day 3 (tuesday)
        Ext.getStore('ScheduleDay3').load();

    },

    onTabpanelShow: function(component, options) {
        Ext.getCmp('AskQuestionButton').hide(true);
    }

});